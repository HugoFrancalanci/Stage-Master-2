function [contr res] = voir_contribution(E,W,H,longueur_cycle,muscle,AFFICHAGE)
% extraire les contributions pour chaque muscle
% limité  à 7 ici
% couleurs pour les synergies de 1:7
col = {'r' 'b' 'g' 'm' 'c' 'y' 'k'}; 
u = util();
if nargin <6
    AFFICHAGE = true;
    if nargin<5
        muscle = [];
        if nargin < 4
            longueur_cycle = [];
        end
    end
end
emgr = W*H;% EMG reconstruit

[T m] = size(E);% temps x nombre de muscle
N     = size(W,2);% nombre de synergies
if isempty(muscle)
    muscle    = eval(['{' sprintf('''mus.%u'' ',1:m) '}']);
end
txt_origin = {'original' 'reconstructed'};
txt_syn    = eval(['{' sprintf('''syn.%u'' ',1:N) '}']);

% calculer la contribution de chaque muscle comme intégrale sous la courbe
% donner le rapport entre la contrubution du muscle (iEMG)
if ~isempty(longueur_cycle)
    ncycle = floor(T/longueur_cycle);
else
    longueur_cycle = T;
    ncycle = 1;
end
for j = 1:m
    for k = 1:N
        % global
        temp = W(:,k)*H(k,j);
        contr(k,j) = trapz(temp)/trapz(E(:,j));
        % pour chaque cycle 
        for i = 1:ncycle
            ind = (i-1)*longueur_cycle+1:i*longueur_cycle;
            temp = trapz(W(ind,k)*H(k,j))/trapz(E(ind,j));
            res(k,j,i) = temp;
        end
    end
end
contr = bsxfun(@rdivide,contr,sum(contr));
res   = bsxfun(@rdivide,res,sum(res,1));
% affichage
% créer les patterns moyens
if ~isempty(longueur_cycle)
    E    = u.pattern_moyen(E,longueur_cycle);
    W    = u.pattern_moyen(W,longueur_cycle);
    emgr = u.pattern_moyen(emgr,longueur_cycle);
end
t = linspace(1,100,size(E,1));

if AFFICHAGE
    figure();
    ligne = floor((m+3)/4); 
    for j = 1:m      
         subaxis(4,ligne,j);
    %      ,'SpacingVertical',0.02,'SpacingHorizontal',0.02, ...
    %                     'PaddingLeft',0,'PaddingRight',0,'PaddingTop',0,'PaddingBottom',0, ...
    %                     'MarginLeft',.05,'MarginRight',.05,'MarginTop',.05,'MarginBottom',.05);
         hold 'on';
         plot(t,E(:,j),'k','linewidth',2);
         plot(t,u.pattern_moyen(emgr(:,j),longueur_cycle),'linestyle','-.','color','r','linewidth',2);
         text(t(floor(length(t)/2)),max(E(:,j)),muscle{j},'fontsize',12)
         if j==m
             legend(txt_origin);
         end
         % ploter les bursts pour chaque synergy
         for k = 1:N
             if (H(k,j)/max(H(k,:)))>1E-3
                 temp = W(:,k)*H(k,j);
               muscle{m}(k)=temp;
                 ff =fill([t(:)' flipud(t(:))'],[temp(:)' zeros(1,length(temp))],col{mod((k)-1,7)+1});
                 alpha(ff,0.6);
             end
         end 
         if j==1
            title('each color is a synergy','fontweight','bold','fontsize',8);
         end
         if j~=m
             set(gca,'xticklabel',[],'TickDir','out');

         end
         yl = get(gca,'ylim');
         set(gca,'ylim',[0 yl(2)],'TickDir','out');
         box off
    end
    %legend(txt_origin(1:n+2));
    % plotter les contributions
    figure();
    for k = 1:N
        subplot(N,1,k)
        bar(contr(k,:),'facecolor',col{mod((k)-1,7)+1});
        if ncycle>1
            hold 'on';
            SD(:,:) = std(res(k,:,:),[],3);
            errorbar(1:m,contr(k,:),SD,'linestyle','none',...
                'linewidth',2,'color',col{mod(k-1,7)+1})
        end
        set(gca,'XGrid','on','Xtick',1:m,'XTickLabel',muscle,'TickDir','out');
        ylabel('contr. (%)')
        box off;
        xlim([0.5 m+0.5])
        ylim([0 1.2]);
        box off;
        if k ==1
            title('contribution to each muscle','fontweight','bold','fontsize',8);
        end
    end
end